{"version":3,"sources":["components/Header/Header.js","components/TabPanel/TabPanel.js","components/Cards/PlanetsCard.js","components/Cards/FIlmsCard.js","components/Cards/PeopleCard.js","components/Cards/SpeciesCard.js","components/Cards/StarshipCard.js","components/Cards/VehicleCard.js","components/Tabs/Tabs.js","App.js","reportWebVitals.js","index.js"],"names":["Header","TabPanel","props","children","value","index","other","role","hidden","id","style","margin","Grid","container","spacing","justifyContent","PlanetCard","item","xs","sm","md","Card","variant","className","CardContent","Typography","sx","fontSize","color","gutterBottom","paddingLeft","display","component","name","climate","population","terrain","FilmsCard","title","director","producer","release_date","PeopleCard","gender","birth_year","height","SpeciesCard","language","designation","average_lifespan","StartshipCard","model","manufacturer","Rating","hyperdrive_rating","readOnly","size","VehicleCard","cargo_capacity","a11yProps","Topics","React","useState","setValue","data1","setData1","data2","setData2","data3","setData3","data4","setData4","data5","setData5","data6","setData6","isLoading","setIsLoading","error","setError","fetchDataHandler","type","a","fetch","response","ok","Error","json","response_data","loadedData","results","map","person","push","film","starship","vehicle","specie","planet","message","useEffect","ErrorMessage","LoadingMessage","Tabs","orientation","onChange","event","newValue","borderRight","borderColor","Tab","label","onClick","length","PlanetsCard","StarshipCard","App","Box","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b43caa5e.chunk.js","sourcesContent":["import React from \"react\";\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <header>\n        <h1>STAR WARS</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\n\nexport default function TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      style={{ margin: \"0px 16px\" }}\n      {...other}\n    >\n      {value === index && (\n        <Grid container spacing={4} justifyContent=\"center\">\n          {children}\n        </Grid>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Grid from \"@mui/material/Grid\";\nimport { Typography } from \"@mui/material\";\nimport \"./Card.css\";\n\nconst PlanetCard = (props) => {\n  const index = props.id % 3;\n  return (\n    <Grid item xs={4} sm={4} md={4}>\n      <Card variant=\"outlined\" className={`card-container card-${index}`}>\n        <CardContent>\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n            #{props.id}\n          </Typography>\n          <span style={{ paddingLeft: \"22px\", display: \"block\" }}>\n            <Typography variant=\"h5\" component=\"div\">\n              {props.name}\n            </Typography>\n            <br />\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              <b>Climate</b> {props.climate}\n            </Typography>\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              <b>Population</b> {props.population}\n            </Typography>\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              <b>Terrain</b> {props.terrain}\n            </Typography>\n          </span>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default PlanetCard;\n","import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Grid from \"@mui/material/Grid\";\nimport { Typography } from \"@mui/material\";\n\nconst FilmsCard = (props) => {\n  const index = props.id % 3;\n  return (\n    <Grid item xs={4} sm={4} md={4} >\n      <Card variant=\"outlined\" className={`card-container card-${index}`}>\n        <CardContent>\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n            #{props.id}\n          </Typography>\n          <span style={{paddingLeft: '22px', display: 'block'}}>\n            <Typography variant=\"h5\" component=\"div\">\n              {props.title}\n            </Typography>\n            <br />\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {\" \"}\n              <b>Director</b> {props.director}\n            </Typography>\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              <b>Producer</b> {props.producer}\n            </Typography>\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {\" \"}\n              <b>Release Date</b> {props.release_date}\n            </Typography>\n          </span>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default FilmsCard;\n","import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Grid from \"@mui/material/Grid\";\nimport { Typography } from \"@mui/material\";\n\nconst PeopleCard = (props) => {\n  const index = props.id % 3;\n  return (\n    <Grid item xs={4} sm={4} md={4}>\n      <Card variant=\"outlined\" className={`card-container card-${index}`}>\n        <CardContent>\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n            #{props.id}\n          </Typography>\n          <span style={{ paddingLeft: \"22px\", display: \"block\" }}>\n            <Typography variant=\"h5\" component=\"div\">\n              {props.name}\n            </Typography>\n            <br />\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              <b>Gender</b> {props.gender}\n            </Typography>\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {\" \"}\n              <b>Birth Year</b> {props.birth_year}\n            </Typography>\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              <b>Height</b> {props.height}\n            </Typography>\n          </span>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default PeopleCard;\n","import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Grid from \"@mui/material/Grid\";\nimport { Typography } from \"@mui/material\";\n\nconst SpeciesCard = (props) => {\n  const index = props.id % 3;\n  return (\n    <Grid item xs={4} sm={4} md={4}>\n      <Card variant=\"outlined\" className={`card-container card-${index}`}>\n        <CardContent>\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n            #{props.id}\n          </Typography>\n          <span style={{ paddingLeft: \"22px\", display: \"block\" }}>\n            <Typography variant=\"h5\" component=\"div\">\n              {props.name}\n            </Typography>\n            <br />\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {\" \"}\n              <b>Language</b> {props.language}\n            </Typography>\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {\" \"}\n              <b>Designation</b> {props.designation}\n            </Typography>\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {\" \"}\n              <b>Average lifespan</b> {props.average_lifespan}\n            </Typography>\n          </span>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default SpeciesCard;\n","import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Grid from \"@mui/material/Grid\";\nimport { Typography, Rating } from \"@mui/material\";\n\nconst StartshipCard = (props) => {\n  const index = props.id % 3;\n  return (\n    <Grid item xs={4} sm={4} md={4}>\n      <Card variant=\"outlined\" className={`card-container card-${index}`}>\n        <CardContent>\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n            #{props.id}\n          </Typography>\n          <span style={{ paddingLeft: \"22px\", display: \"block\" }}>\n            <Typography variant=\"h5\" component=\"div\">\n              {props.name}\n            </Typography>\n            <br />\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {\" \"}\n              <b>Model</b> {props.model}\n            </Typography>\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {\" \"}\n              <b>Manufacturer</b> {props.manufacturer}\n            </Typography>\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {\" \"}\n              <b>Hyperdrive rating</b> <Rating name=\"read-only\" value={props.hyperdrive_rating} readOnly size=\"small\"/>\n            </Typography>\n          </span>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default StartshipCard;\n","import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Grid from \"@mui/material/Grid\";\nimport { Typography } from \"@mui/material\";\n\nconst VehicleCard = (props) => {\n  const index = props.id % 3;\n  return (\n    <Grid item xs={4} sm={4} md={4}>\n      <Card variant=\"outlined\" className={`card-container card-${index}`}>\n        <CardContent>\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n            #{props.id}\n          </Typography>\n          <span style={{ paddingLeft: \"22px\", display: \"block\" }}>\n            <Typography variant=\"h5\" component=\"div\">\n              {props.name}\n            </Typography>\n            <br />\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {\" \"}\n              <b>Model</b> {props.model}\n            </Typography>\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {\" \"}\n              <b>Manufacturer</b> {props.manufacturer}\n            </Typography>\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {\" \"}\n              <b>Cargo capacity</b> {props.cargo_capacity}\n            </Typography>\n          </span>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default VehicleCard;\n","import Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport React from \"react\";\nimport TabPanel from \"../TabPanel/TabPanel\";\nimport PlanetsCard from \"../Cards/PlanetsCard\";\nimport FilmsCard from \"../Cards/FIlmsCard\";\nimport PeopleCard from \"../Cards/PeopleCard\";\nimport SpeciesCard from \"../Cards/SpeciesCard\";\nimport StarshipCard from \"../Cards/StarshipCard\";\nimport VehicleCard from \"../Cards/VehicleCard\";\nimport { Typography, Grid } from \"@mui/material\";\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    \"aria-controls\": `vertical-tabpanel-${index}`,\n  };\n}\n\nconst Topics = () => {\n  const [value, setValue] = React.useState(0);\n\n  const [data1, setData1] = React.useState([]);\n  const [data2, setData2] = React.useState([]);\n  const [data3, setData3] = React.useState([]);\n  const [data4, setData4] = React.useState([]);\n  const [data5, setData5] = React.useState([]);\n  const [data6, setData6] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n\n  const fetchDataHandler = async (type) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(`https://swapi.dev/api/${type}`);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const response_data = await response.json();\n\n      const loadedData = [];\n      switch (type) {\n        case \"people\":\n          response_data.results.map((person, index) =>\n            loadedData.push({\n              id: index + 1,\n              name: person.name,\n              gender: person.gender,\n              birth_year: person.birth_year,\n              height: person.height,\n            })\n          );\n          setData3(loadedData);\n          break;\n        case \"films\":\n          response_data.results.map((film, index) =>\n            loadedData.push({\n              id: index + 1,\n              title: film.title,\n              director: film.director,\n              producer: film.producer,\n              release_date: film.release_date,\n            })\n          );\n          setData2(loadedData);\n          break;\n        case \"starships\":\n          response_data.results.map((starship, index) =>\n            loadedData.push({\n              id: index + 1,\n              name: starship.name,\n              model: starship.model,\n              manufacturer: starship.manufacturer,\n              hyperdrive_rating: starship.hyperdrive_rating,\n            })\n          );\n          setData5(loadedData);\n          break;\n        case \"vehicles\":\n          response_data.results.map((vehicle, index) =>\n            loadedData.push({\n              id: index + 1,\n              name: vehicle.name,\n              model: vehicle.model,\n              manufacturer: vehicle.manufacturer,\n              cargo_capacity: vehicle.cargo_capacity,\n            })\n          );\n          setData6(loadedData);\n          break;\n        case \"species\":\n          response_data.results.map((specie, index) =>\n            loadedData.push({\n              id: index + 1,\n              name: specie.name,\n              language: specie.language,\n              designation: specie.designation,\n              average_lifespan: specie.average_lifespan,\n            })\n          );\n          setData4(loadedData);\n          break;\n        case \"planets\":\n          response_data.results.map((planet, index) =>\n            loadedData.push({\n              id: index + 1,\n              name: planet.name,\n              climate: planet.climate,\n              population: planet.population,\n              terrain: planet.terrain,\n            })\n          );\n          setData1(loadedData);\n          break;\n        default:\n          setData1([]);\n          setData2([]);\n          setData3([]);\n          setData4([]);\n          setData5([]);\n          setData6([]);\n          break;\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  };\n\n  React.useEffect(() => {\n    fetchDataHandler(\"planets\");\n  }, []);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const ErrorMessage = () => (\n    <Grid item>\n      <Typography className=\"error-message\">\n        Something went wrong!! :({\" \"}\n      </Typography>\n    </Grid>\n  );\n  const LoadingMessage = () => (\n    <Grid item>\n      <Typography className=\"loading-message\">Loading... </Typography>\n    </Grid>\n  );\n\n  return (\n    <>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs\"\n        sx={{ borderRight: 1, borderColor: \"divider\" }}\n      >\n        <Tab\n          label=\"Planets\"\n          onClick={() => fetchDataHandler(\"planets\")}\n          {...a11yProps(0)}\n        />\n        <Tab\n          label=\"Films\"\n          onClick={() => fetchDataHandler(\"films\")}\n          {...a11yProps(1)}\n        />\n        <Tab\n          label=\"People\"\n          onClick={() => fetchDataHandler(\"people\")}\n          {...a11yProps(2)}\n        />\n        <Tab\n          label=\"Species\"\n          onClick={() => fetchDataHandler(\"species\")}\n          {...a11yProps(3)}\n        />\n        <Tab\n          label=\"Starships\"\n          onClick={() => fetchDataHandler(\"starships\")}\n          {...a11yProps(4)}\n        />\n        <Tab\n          label=\"Vehicles\"\n          onClick={() => fetchDataHandler(\"vehicles\")}\n          {...a11yProps(5)}\n        />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        {data1.length > 0 &&\n          !isLoading &&\n          !error &&\n          data1.map((planet) => (\n            <PlanetsCard\n              key={planet.id}\n              id={planet.id}\n              name={planet.name}\n              climate={planet.climate}\n              population={planet.population}\n              terrain={planet.terrain}\n            />\n          ))}\n        {isLoading && <LoadingMessage />}\n        {error && <ErrorMessage />}\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        {data2.length > 0 &&\n          !isLoading &&\n          !error &&\n          data2.map((film) => (\n            <FilmsCard\n              key={film.id}\n              id={film.id}\n              title={film.title}\n              director={film.director}\n              producer={film.producer}\n              release_date={film.release_date}\n            />\n          ))}\n        {isLoading && <LoadingMessage />}\n        {error && <ErrorMessage />}\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        {data3.length > 0 &&\n          !isLoading &&\n          !error &&\n          data3.map((person) => (\n            <PeopleCard\n              key={person.id}\n              id={person.id}\n              name={person.name}\n              gender={person.gender}\n              birth_year={person.birth_year}\n              height={person.height}\n            />\n          ))}\n        {isLoading && <LoadingMessage />}\n        {error && <ErrorMessage />}\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        {data4.length > 0 &&\n          !isLoading &&\n          !error &&\n          data4.map((specie) => (\n            <SpeciesCard\n              key={specie.id}\n              id={specie.id}\n              name={specie.name}\n              language={specie.language}\n              designation={specie.designation}\n              average_lifespan={specie.average_lifespan}\n            />\n          ))}\n        {isLoading && <LoadingMessage />}\n        {error && <ErrorMessage />}\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        {data5.length > 0 &&\n          !isLoading &&\n          !error &&\n          data5.map((starship) => (\n            <StarshipCard\n              key={starship.id}\n              id={starship.id}\n              name={starship.name}\n              model={starship.model}\n              manufacturer={starship.manufacturer}\n              hyperdrive_rating={starship.hyperdrive_rating}\n            />\n          ))}\n        {isLoading && <LoadingMessage />}\n        {error && <ErrorMessage />}\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n        {data6.length > 0 &&\n          !isLoading &&\n          !error &&\n          data6.map((vehicle) => (\n            <VehicleCard\n              key={vehicle.id}\n              id={vehicle.id}\n              name={vehicle.name}\n              model={vehicle.model}\n              manufacturer={vehicle.manufacturer}\n              cargo_capacity={vehicle.cargo_capacity}\n            />\n          ))}\n        {isLoading && <LoadingMessage />}\n        {error && <ErrorMessage />}\n      </TabPanel>\n    </>\n  );\n};\n\nexport default Topics;\n","import Header from \"./components/Header/Header\";\nimport Topics from \"./components/Tabs/Tabs\";\nimport Box from \"@mui/material/Box\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Box className=\"main-div\">\n      <span className=\"main-content\">\n      <Header />\n      <span className=\"spacer\" />\n      <Box sx={{ display: \"flex\" }} className=\"tab-div\">\n        <Topics />\n      </Box>\n      </span>\n    </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}